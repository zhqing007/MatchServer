//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfMatchClient.MatchService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeamStatus", Namespace="http://schemas.datacontract.org/2004/07/MatchServerLib")]
    [System.SerializableAttribute()]
    public partial struct TeamStatus : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsloginedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Islogined {
            get {
                return this.IsloginedField;
            }
            set {
                if ((this.IsloginedField.Equals(value) != true)) {
                    this.IsloginedField = value;
                    this.RaisePropertyChanged("Islogined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamName {
            get {
                return this.TeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNameField, value) != true)) {
                    this.TeamNameField = value;
                    this.RaisePropertyChanged("TeamName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeamData", Namespace="http://schemas.datacontract.org/2004/07/MatchServerLib")]
    [System.SerializableAttribute()]
    public partial class TeamData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CardDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, WpfMatchClient.MatchService.PersonData> DrawInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CardD {
            get {
                return this.CardDField;
            }
            set {
                if ((object.ReferenceEquals(this.CardDField, value) != true)) {
                    this.CardDField = value;
                    this.RaisePropertyChanged("CardD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardInfo {
            get {
                return this.CardInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CardInfoField, value) != true)) {
                    this.CardInfoField = value;
                    this.RaisePropertyChanged("CardInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, WpfMatchClient.MatchService.PersonData> DrawInfo {
            get {
                return this.DrawInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawInfoField, value) != true)) {
                    this.DrawInfoField = value;
                    this.RaisePropertyChanged("DrawInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamName {
            get {
                return this.TeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNameField, value) != true)) {
                    this.TeamNameField = value;
                    this.RaisePropertyChanged("TeamName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonData", Namespace="http://schemas.datacontract.org/2004/07/MatchServerLib")]
    [System.SerializableAttribute()]
    public partial class PersonData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawResult {
            get {
                return this.DrawResultField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawResultField, value) != true)) {
                    this.DrawResultField = value;
                    this.RaisePropertyChanged("DrawResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Num {
            get {
                return this.NumField;
            }
            set {
                if ((object.ReferenceEquals(this.NumField, value) != true)) {
                    this.NumField = value;
                    this.RaisePropertyChanged("Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="teaminfodb", Namespace="http://schemas.datacontract.org/2004/07/MatchServerLib")]
    [System.SerializableAttribute()]
    public partial struct teaminfodb : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Loginname {
            get {
                return this.LoginnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginnameField, value) != true)) {
                    this.LoginnameField = value;
                    this.RaisePropertyChanged("Loginname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatchName {
            get {
                return this.MatchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchNameField, value) != true)) {
                    this.MatchNameField = value;
                    this.RaisePropertyChanged("MatchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="matchinfodb", Namespace="http://schemas.datacontract.org/2004/07/MatchServerLib")]
    [System.SerializableAttribute()]
    public partial struct matchinfodb : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupCount {
            get {
                return this.GroupCountField;
            }
            set {
                if ((this.GroupCountField.Equals(value) != true)) {
                    this.GroupCountField = value;
                    this.RaisePropertyChanged("GroupCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MatchService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InitDic", ReplyAction="http://tempuri.org/IService/InitDicResponse")]
        WpfMatchClient.MatchService.TeamStatus[] InitDic(string matchname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DropMatchData", ReplyAction="http://tempuri.org/IService/DropMatchDataResponse")]
        void DropMatchData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LoginIn", ReplyAction="http://tempuri.org/IService/LoginInResponse")]
        bool LoginIn(string teamname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LoginOut", ReplyAction="http://tempuri.org/IService/LoginOutResponse")]
        bool LoginOut(string teamname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UserLogin", ReplyAction="http://tempuri.org/IService/UserLoginResponse")]
        string UserLogin(string name, string pw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetDraw", ReplyAction="http://tempuri.org/IService/SetDrawResponse")]
        void SetDraw(string teamname, WpfMatchClient.MatchService.TeamData drawdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDraw", ReplyAction="http://tempuri.org/IService/GetDrawResponse")]
        WpfMatchClient.MatchService.TeamData GetDraw(string teamname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTeams", ReplyAction="http://tempuri.org/IService/GetTeamsResponse")]
        WpfMatchClient.MatchService.teaminfodb[] GetTeams();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMatchTeams", ReplyAction="http://tempuri.org/IService/GetMatchTeamsResponse")]
        WpfMatchClient.MatchService.teaminfodb[] GetMatchTeams(string matchname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMatchs", ReplyAction="http://tempuri.org/IService/GetMatchsResponse")]
        WpfMatchClient.MatchService.matchinfodb[] GetMatchs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddTeam", ReplyAction="http://tempuri.org/IService/AddTeamResponse")]
        int AddTeam(WpfMatchClient.MatchService.teaminfodb team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpDateTeam", ReplyAction="http://tempuri.org/IService/UpDateTeamResponse")]
        void UpDateTeam(WpfMatchClient.MatchService.teaminfodb team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DelTeam", ReplyAction="http://tempuri.org/IService/DelTeamResponse")]
        void DelTeam(string teamname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddPerson", ReplyAction="http://tempuri.org/IService/AddPersonResponse")]
        void AddPerson(string matchname, string teamname, WpfMatchClient.MatchService.PersonData perdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemovePerson", ReplyAction="http://tempuri.org/IService/RemovePersonResponse")]
        void RemovePerson(string matchname, string teamname, WpfMatchClient.MatchService.PersonData perdata);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : WpfMatchClient.MatchService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<WpfMatchClient.MatchService.IService>, WpfMatchClient.MatchService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WpfMatchClient.MatchService.TeamStatus[] InitDic(string matchname) {
            return base.Channel.InitDic(matchname);
        }
        
        public void DropMatchData() {
            base.Channel.DropMatchData();
        }
        
        public bool LoginIn(string teamname) {
            return base.Channel.LoginIn(teamname);
        }
        
        public bool LoginOut(string teamname) {
            return base.Channel.LoginOut(teamname);
        }
        
        public string UserLogin(string name, string pw) {
            return base.Channel.UserLogin(name, pw);
        }
        
        public void SetDraw(string teamname, WpfMatchClient.MatchService.TeamData drawdata) {
            base.Channel.SetDraw(teamname, drawdata);
        }
        
        public WpfMatchClient.MatchService.TeamData GetDraw(string teamname) {
            return base.Channel.GetDraw(teamname);
        }
        
        public WpfMatchClient.MatchService.teaminfodb[] GetTeams() {
            return base.Channel.GetTeams();
        }
        
        public WpfMatchClient.MatchService.teaminfodb[] GetMatchTeams(string matchname) {
            return base.Channel.GetMatchTeams(matchname);
        }
        
        public WpfMatchClient.MatchService.matchinfodb[] GetMatchs() {
            return base.Channel.GetMatchs();
        }
        
        public int AddTeam(WpfMatchClient.MatchService.teaminfodb team) {
            return base.Channel.AddTeam(team);
        }
        
        public void UpDateTeam(WpfMatchClient.MatchService.teaminfodb team) {
            base.Channel.UpDateTeam(team);
        }
        
        public void DelTeam(string teamname) {
            base.Channel.DelTeam(teamname);
        }
        
        public void AddPerson(string matchname, string teamname, WpfMatchClient.MatchService.PersonData perdata) {
            base.Channel.AddPerson(matchname, teamname, perdata);
        }
        
        public void RemovePerson(string matchname, string teamname, WpfMatchClient.MatchService.PersonData perdata) {
            base.Channel.RemovePerson(matchname, teamname, perdata);
        }
    }
}
